--- !ruby/object:Provider::ResourceOverrides
Address: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::FetchedExternal
    name: address
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  input: true
  description: |
    Represents an Address resource.

    Each virtual machine instance has an ephemeral internal IP address and,
    optionally, an external IP address. To communicate between instances on
    the same network, you can use an instance's internal IP address. To
    communicate with the Internet and instances outside of the same network,
    you must specify the instance's external IP address.

    Internal IP addresses are ephemeral and only belong to an instance for
    the lifetime of the instance; if the instance is deleted and recreated,
    the instance is assigned a new internal IP address, either by Compute
    Engine or by you. External IP addresses can be either ephemeral or
    static.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Reserving a Static External IP Address: https://cloud.google.com/compute/docs/instances-and-network
      Reserving a Static Internal IP Address: https://cloud.google.com/compute/docs/ip-addresses/reserve-static-internal-ip-address
    api: https://cloud.google.com/compute/docs/reference/beta/addresses
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/regions/{{region}}/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    addressType: !ruby/object:DiscoveryOverride::PropertyOverride
      values:
      - :INTERNAL
      - :EXTERNAL
Autoscaler: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: |
    Represents an Autoscaler resource.

    Autoscalers allow you to automatically scale virtual machine instances in
    managed instance groups according to an autoscaling policy that you
    define.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Autoscaling Groups of Instances: https://cloud.google.com/compute/docs/autoscaler/
    api: https://cloud.google.com/compute/docs/reference/rest/v1/autoscalers
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/zones/{{zone}}/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
BackendBucket: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: |
    Backend buckets allow you to use Google Cloud Storage buckets with HTTP(S)
    load balancing.

    An HTTP(S) load balancer can direct traffic to specified URLs to a
    backend bucket rather than a backend service. It can send requests for
    static content to a Cloud Storage bucket and requests for dynamic content
    a virtual machine instance.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Using a Cloud Storage bucket as a load balancer backend: https://cloud.google.com/compute/docs/load-balancing/http/backend-bucket
    api: https://cloud.google.com/compute/docs/reference/latest/backendBuckets
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/global/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties: {}
BackendService: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: |
    Creates a BackendService resource in the specified project using the data
    included in the request.
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/global/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    backends.item_type.balancingMode: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies the balancing mode for this backend.

        For global HTTP(S) or TCP/SSL load balancing, the default is
        UTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S))
        and CONNECTION (for TCP/SSL).

        This cannot be used for internal load balancing.
    backends.item_type.capacityScaler: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        A multiplier applied to the group's maximum servicing capacity
        (based on UTILIZATION, RATE or CONNECTION).

        Default value is 1, which means the group will serve up to 100%
        of its configured capacity (depending on balancingMode). A
        setting of 0 means the group is completely drained, offering
        0% of its available Capacity. Valid range is [0.0,1.0].

        This cannot be used for internal load balancing.
    backends.item_type.description: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        An optional description of this resource.
        Provide this property when you create the resource.
    backends.item_type.group: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        This instance group defines the list of instances that serve
        traffic. Member virtual machine instances from each instance
        group must live in the same zone as the instance group itself.

        No two backends in a backend service are allowed to use same
        Instance Group resource.

        When the BackendService has load balancing scheme INTERNAL, the
        instance group must be in a zone within the same region as the
        BackendService.
      resource: InstanceGroup
      imports: selfLink
    backends.item_type.maxConnections: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The max number of simultaneous connections for the group. Can
        be used with either CONNECTION or UTILIZATION balancing modes.

        For CONNECTION mode, either maxConnections or
        maxConnectionsPerInstance must be set.

        This cannot be used for internal load balancing.
    backends.item_type.maxConnectionsPerInstance: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The max number of simultaneous connections that a single
        backend instance can handle. This is used to calculate the
        capacity of the group. Can be used in either CONNECTION or
        UTILIZATION balancing modes.

        For CONNECTION mode, either maxConnections or
        maxConnectionsPerInstance must be set.

        This cannot be used for internal load balancing.
    backends.item_type.maxRate: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The max requests per second (RPS) of the group.

        Can be used with either RATE or UTILIZATION balancing modes,
        but required if RATE mode. For RATE mode, either maxRate or
        maxRatePerInstance must be set.

        This cannot be used for internal load balancing.
    backends.item_type.maxRatePerInstance: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The max requests per second (RPS) that a single backend
        instance can handle. This is used to calculate the capacity of
        the group. Can be used in either balancing mode. For RATE mode,
        either maxRate or maxRatePerInstance must be set.

        This cannot be used for internal load balancing.
    backends.item_type.maxUtilization: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Used when balancingMode is UTILIZATION. This ratio defines the
        CPU utilization target for the group. The default is 0.8. Valid
        range is [0.0, 1.0].

        This cannot be used for internal load balancing.
    backends: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::Enum
          name: balancingMode
          description: |
            Specifies the balancing mode for this backend.

            For global HTTP(S) or TCP/SSL load balancing, the default is
            UTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S))
            and CONNECTION (for TCP/SSL).

            This cannot be used for internal load balancing.
          values:
          - :UTILIZATION
          - :RATE
          - :CONNECTION
        - !ruby/object:Api::Type::Double
          name: capacityScaler
          description: |
            A multiplier applied to the group's maximum servicing capacity
            (based on UTILIZATION, RATE or CONNECTION).

            Default value is 1, which means the group will serve up to 100%
            of its configured capacity (depending on balancingMode). A
            setting of 0 means the group is completely drained, offering
            0% of its available Capacity. Valid range is [0.0,1.0].

            This cannot be used for internal load balancing.
        - !ruby/object:Api::Type::String
          name: description
          description: |
            An optional description of this resource.
            Provide this property when you create the resource.
        - !ruby/object:Api::Type::ResourceRef
          name: group
          resource: InstanceGroup
          imports: selfLink
          description: |
            This instance group defines the list of instances that serve
            traffic. Member virtual machine instances from each instance
            group must live in the same zone as the instance group itself.

            No two backends in a backend service are allowed to use same
            Instance Group resource.

            When the BackendService has load balancing scheme INTERNAL, the
            instance group must be in a zone within the same region as the
            BackendService.
        - !ruby/object:Api::Type::Integer
          name: maxConnections
          description: |
            The max number of simultaneous connections for the group. Can
            be used with either CONNECTION or UTILIZATION balancing modes.

            For CONNECTION mode, either maxConnections or
            maxConnectionsPerInstance must be set.

            This cannot be used for internal load balancing.
        - !ruby/object:Api::Type::Integer
          name: maxConnectionsPerInstance
          description: |
            The max number of simultaneous connections that a single
            backend instance can handle. This is used to calculate the
            capacity of the group. Can be used in either CONNECTION or
            UTILIZATION balancing modes.

            For CONNECTION mode, either maxConnections or
            maxConnectionsPerInstance must be set.

            This cannot be used for internal load balancing.
        - !ruby/object:Api::Type::Integer
          name: maxRate
          description: |
            The max requests per second (RPS) of the group.

            Can be used with either RATE or UTILIZATION balancing modes,
            but required if RATE mode. For RATE mode, either maxRate or
            maxRatePerInstance must be set.

            This cannot be used for internal load balancing.
        - !ruby/object:Api::Type::Double
          name: maxRatePerInstance
          description: |
            The max requests per second (RPS) that a single backend
            instance can handle. This is used to calculate the capacity of
            the group. Can be used in either balancing mode. For RATE mode,
            either maxRate or maxRatePerInstance must be set.

            This cannot be used for internal load balancing.
        - !ruby/object:Api::Type::Double
          name: maxUtilization
          description: |
            Used when balancingMode is UTILIZATION. This ratio defines the
            CPU utilization target for the group. The default is 0.8. Valid
            range is [0.0, 1.0].

            This cannot be used for internal load balancing.
    loadBalancingScheme: !ruby/object:DiscoveryOverride::PropertyOverride
      values:
      - :INTERNAL
      - :EXTERNAL
    protocol: !ruby/object:DiscoveryOverride::PropertyOverride
      values:
      - :HTTP
      - :HTTPS
      - :TCP
      - :SSL
DiskType: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: |
    Represents a DiskType resource. A DiskType resource represents the type
    of disk to use, such as a pd-ssd or pd-standard. To reference a disk
    type, use the disk type's full or partial URL.
  properties: {}
  readonly: true
Disk: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - name
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  input: true
  description: |
    Persistent disks are durable storage devices that function similarly to
    the physical disks in a desktop or a server. Compute Engine manages the
    hardware behind these devices to ensure data redundancy and optimize
    performance for you. Persistent disks are available as either standard
    hard disk drives (HDD) or solid-state drives (SSD).

    Persistent disks are located independently from your virtual machine
    instances, so you can detach or move persistent disks to keep your data
    even after you delete your instances. Persistent disk performance scales
    automatically with size, so you can resize your existing persistent disks
    or add more persistent disks to an instance to meet your performance and
    storage space requirements.

    Add a persistent disk to your instance when you need reliable and
    affordable storage with consistent performance characteristics.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Adding a persistent disk: https://cloud.google.com/compute/docs/disks/add-persistent-disk
    api: https://cloud.google.com/compute/docs/reference/latest/disks
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/zones/{{zone}}/operations/{{op_id}}
      wait_ms: 1000
      timeouts: !ruby/object:Api::Async::Operation::Timeouts
        insert_sec: 300
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    labels: !ruby/object:DiscoveryOverride::PropertyOverride
      description: 'Labels to apply to this disk.  A list of key->value pairs.

'
      value_type: Api::Type::String
      update_verb: :POST
      update_url: projects/{{project}}/zones/{{zone}}/disks/{{name}}/setLabels
    users: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::ResourceRef
        name: user
        resource: Instance
        imports: selfLink
        description: A reference to a user of this disk
Firewall: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: |
    Each network has its own firewall controlling access to and from the
    instances.

    All traffic to instances, even from other instances, is blocked by the
    firewall unless firewall rules are created to allow it.

    The default network has automatically created firewall rules that are
    shown in default firewall rules. No manually created network has
    automatically created firewall rules except for a default "allow" rule for
    outgoing traffic and a default "deny" for incoming traffic. For all
    networks except the default network, you must create any firewall rules
    you need.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Official Documentation: https://cloud.google.com/vpc/docs/firewalls
    api: https://cloud.google.com/compute/docs/reference/latest/firewalls
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/global/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    allowed.item_type.ip_protocol: !ruby/object:DiscoveryOverride::PropertyOverride
      name: ip_protocol
      description: |
        The IP protocol to which this rule applies. The protocol type is
        required when creating a firewall rule. This value can either be
        one of the following well known protocol strings (tcp, udp,
        icmp, esp, ah, sctp), or the IP protocol number.
      required: true
      api_name: IPProtocol
    allowed.item_type.ports: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        An optional list of ports to which this rule applies. This field
        is only applicable for UDP or TCP protocol. Each entry must be
        either an integer or a range. If not specified, this rule
        applies to connections through any port.

        Example inputs include: ["22"], ["80","443"], and
        ["12345-12349"].
    allowed: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::String
          name: ip_protocol
          description: |
            The IP protocol to which this rule applies. The protocol type is
            required when creating a firewall rule. This value can either be
            one of the following well known protocol strings (tcp, udp,
            icmp, esp, ah, sctp), or the IP protocol number.
          required: true
          api_name: IPProtocol
        - !ruby/object:Api::Type::Array
          name: ports
          description: |
            An optional list of ports to which this rule applies. This field
            is only applicable for UDP or TCP protocol. Each entry must be
            either an integer or a range. If not specified, this rule
            applies to connections through any port.

            Example inputs include: ["22"], ["80","443"], and
            ["12345-12349"].
          item_type: Api::Type::String
    denied.item_type.ip_protocol: !ruby/object:DiscoveryOverride::PropertyOverride
      name: ip_protocol
      description: |
        The IP protocol to which this rule applies. The protocol type is
        required when creating a firewall rule. This value can either be
        one of the following well known protocol strings (tcp, udp,
        icmp, esp, ah, sctp), or the IP protocol number.
      required: true
      api_name: IPProtocol
    denied.item_type.ports: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        An optional list of ports to which this rule applies. This field
        is only applicable for UDP or TCP protocol. Each entry must be
        either an integer or a range. If not specified, this rule
        applies to connections through any port.

        Example inputs include: ["22"], ["80","443"], and
        ["12345-12349"].
    denied: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::String
          name: ip_protocol
          description: |
            The IP protocol to which this rule applies. The protocol type is
            required when creating a firewall rule. This value can either be
            one of the following well known protocol strings (tcp, udp,
            icmp, esp, ah, sctp), or the IP protocol number.
          required: true
          api_name: IPProtocol
        - !ruby/object:Api::Type::Array
          name: ports
          description: |
            An optional list of ports to which this rule applies. This field
            is only applicable for UDP or TCP protocol. Each entry must be
            either an integer or a range. If not specified, this rule
            applies to connections through any port.

            Example inputs include: ["22"], ["80","443"], and
            ["12345-12349"].
          item_type: Api::Type::String
    sourceServiceAccounts: !ruby/object:DiscoveryOverride::PropertyOverride
      max_size: 1
    targetServiceAccounts: !ruby/object:DiscoveryOverride::PropertyOverride
      max_size: 1
  update_verb: :PATCH
ForwardingRule: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  input: true
  description: |
    A ForwardingRule resource. A ForwardingRule resource specifies which pool
    of target virtual machines to forward a packet to if it matches the given
    [IPAddress, IPProtocol, portRange] tuple.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Official Documentation: https://cloud.google.com/compute/docs/load-balancing/network/forwarding-rules
    api: https://cloud.google.com/compute/docs/reference/latest/forwardingRule
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/regions/{{region}}/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    ipVersion: !ruby/object:DiscoveryOverride::PropertyOverride
      values:
      - :IPV4
      - :IPV6
    loadBalancingScheme: !ruby/object:DiscoveryOverride::PropertyOverride
      values:
      - :INTERNAL
      - :EXTERNAL
    ports: !ruby/object:DiscoveryOverride::PropertyOverride
      max_size: 5
HttpHealthCheck: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: |
    An HttpHealthCheck resource. This resource defines a template for how
    individual VMs should be checked for health, via HTTP.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Adding Health Checks: https://cloud.google.com/compute/docs/load-balancing/health-checks#legacy_health_checks
    api: https://cloud.google.com/compute/docs/reference/latest/httpHealthChecks
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/global/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties: {}
HttpsHealthCheck: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: |
    An HttpsHealthCheck resource. This resource defines a template for how
    individual VMs should be checked for health, via HTTPS.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Adding Health Checks: https://cloud.google.com/compute/docs/load-balancing/health-checks#legacy_health_checks
    api: https://cloud.google.com/compute/docs/reference/latest/httpsHealthChecks
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/global/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties: {}
HealthCheck: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: |
    Health Checks determine whether instances are responsive and able to do work.
    They are an important part of a comprehensive load balancing configuration,
    as they enable monitoring instances behind load balancers.

    Health Checks poll instances at a specified interval. Instances that
    do not respond successfully to some number of probes in a row are marked
    as unhealthy. No new connections are sent to unhealthy instances,
    though existing connections will continue. The health check will
    continue to poll unhealthy instances. If an instance later responds
    successfully to some number of consecutive probes, it is marked
    healthy again and can receive new connections.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Official Documentation: https://cloud.google.com/load-balancing/docs/health-checks
    api: https://cloud.google.com/compute/docs/reference/rest/latest/healthChecks
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/global/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    type: !ruby/object:DiscoveryOverride::PropertyOverride
      values:
      - :TCP
      - :SSL
      - :HTTP
      - :HTTPS
InstanceTemplate: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  input: true
  description: |
    Defines an Instance Template resource that provides configuration settings
    for your virtual machine instances. Instance templates are not tied to the
    lifetime of an instance and can be used and reused as to deploy virtual
    machines. You can also use different templates to create different virtual
    machine configurations. Instance templates are required when you create a
    managed instance group.

    Tip: Disks should be set to autoDelete=true
    so that leftover disks are not left behind on machine deletion.
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/global/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    properties.disks.item_type.autoDelete: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies whether the disk will be auto-deleted when the
        instance is deleted (but not when the disk is detached from
        the instance).

        Tip: Disks should be set to autoDelete=true
        so that leftover disks are not left behind on machine
        deletion.
    properties.disks.item_type.boot: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Indicates that this is a boot disk. The virtual machine will
        use the first partition of the disk for its root filesystem.
    properties.disks.item_type.deviceName: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies a unique device name of your choice that is
        reflected into the /dev/disk/by-id/google-* tree of a Linux
        operating system running within the instance. This name can
        be used to reference the device for mounting, resizing, and
        so on, from within the instance.
    properties.disks.item_type.diskEncryptionKey.rawKey: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies a 256-bit customer-supplied encryption key,
        encoded in RFC 4648 base64 to either encrypt or decrypt
        this resource.
    properties.disks.item_type.diskEncryptionKey.rsaEncryptedKey: !ruby/object:DiscoveryOverride::PropertyOverride
      name: rsaEncryptedKey
      description: |
        Specifies an RFC 4648 base64 encoded, RSA-wrapped
        2048-bit customer-supplied encryption key to either
        encrypt or decrypt this resource.
    properties.disks.item_type.diskEncryptionKey.sha256: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The RFC 4648 base64 encoded SHA-256 hash of the
        customer-supplied encryption key that protects this
        resource.
    properties.disks.item_type.diskEncryptionKey: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Encrypts or decrypts a disk using a customer-supplied
        encryption key.
    properties.disks.item_type.index: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Assigns a zero-based index to this disk, where 0 is
        reserved for the boot disk. For example, if you have many
        disks attached to an instance, each disk would have a
        unique index number. If not specified, the server will
        choose an appropriate value.
    properties.disks.item_type.initializeParams.diskName: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies the disk name. If not specified, the default
        is to use the name of the instance.
    properties.disks.item_type.initializeParams.diskType: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Reference to a gcompute_disk_type resource.
        Specifies the disk type to use to create the instance.
        If not specified, the default is pd-standard.
      resource: DiskType
      imports: selfLink
    properties.disks.item_type.initializeParams.sourceImage: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The source image to create this disk. When creating a
        new instance, one of initializeParams.sourceImage or
        disks.source is required.  To create a disk with one of
        the public operating system images, specify the image
        by its family name.
    properties.disks.item_type.initializeParams.sourceImageEncryptionKey.rawKey: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies a 256-bit customer-supplied encryption
        key, encoded in RFC 4648 base64 to either encrypt
        or decrypt this resource.
    properties.disks.item_type.initializeParams.sourceImageEncryptionKey.sha256: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The RFC 4648 base64 encoded SHA-256 hash of the
        customer-supplied encryption key that protects this
        resource.
    properties.disks.item_type.initializeParams.sourceImageEncryptionKey: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The customer-supplied encryption key of the source
        image. Required if the source image is protected by a
        customer-supplied encryption key.

        Instance templates do not store customer-supplied
        encryption keys, so you cannot create disks for
        instances in a managed instance group if the source
        images are encrypted with your own keys.
    properties.disks.item_type.initializeParams: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies the parameters for a new disk that will be
        created alongside the new instance. Use initialization
        parameters to create boot disks or local SSDs attached to
        the new instance.
      input: true
    properties.disks.item_type.interface: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies the disk interface to use for attaching this
        disk, which is either SCSI or NVME. The default is SCSI.
        Persistent disks must always use SCSI and the request will
        fail if you attempt to attach a persistent disk in any
        other format than SCSI.
    properties.disks.item_type.mode: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The mode in which to attach this disk, either READ_WRITE or
        READ_ONLY. If not specified, the default is to attach the
        disk in READ_WRITE mode.
    properties.disks.item_type.source: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Reference to a gcompute_disk resource. When creating a new instance,
        one of initializeParams.sourceImage or disks.source is required.

        If desired, you can also attach existing non-root
        persistent disks using this property. This field is only
        applicable for persistent disks.

        Note that for InstanceTemplate, specify the disk name, not
        the URL for the disk.
      resource: Disk
      imports: name
    properties.disks.item_type.type: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies the type of the disk, either SCRATCH or
        PERSISTENT. If not specified, the default is PERSISTENT.
    properties.disks: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::Boolean
          name: autoDelete
          description: |
            Specifies whether the disk will be auto-deleted when the
            instance is deleted (but not when the disk is detached from
            the instance).

            Tip: Disks should be set to autoDelete=true
            so that leftover disks are not left behind on machine
            deletion.
        - !ruby/object:Api::Type::Boolean
          name: boot
          description: |
            Indicates that this is a boot disk. The virtual machine will
            use the first partition of the disk for its root filesystem.
        - !ruby/object:Api::Type::String
          name: deviceName
          description: |
            Specifies a unique device name of your choice that is
            reflected into the /dev/disk/by-id/google-* tree of a Linux
            operating system running within the instance. This name can
            be used to reference the device for mounting, resizing, and
            so on, from within the instance.
        - !ruby/object:Api::Type::NestedObject
          name: diskEncryptionKey
          description: |
            Encrypts or decrypts a disk using a customer-supplied
            encryption key.
          properties:
          - !ruby/object:Api::Type::String
            name: rawKey
            description: |
              Specifies a 256-bit customer-supplied encryption key,
              encoded in RFC 4648 base64 to either encrypt or decrypt
              this resource.
          - !ruby/object:Api::Type::String
            name: rsaEncryptedKey
            description: |
              Specifies an RFC 4648 base64 encoded, RSA-wrapped
              2048-bit customer-supplied encryption key to either
              encrypt or decrypt this resource.
          - !ruby/object:Api::Type::String
            name: sha256
            description: |
              The RFC 4648 base64 encoded SHA-256 hash of the
              customer-supplied encryption key that protects this
              resource.
            output: true
        - !ruby/object:Api::Type::Integer
          name: index
          description: |
            Assigns a zero-based index to this disk, where 0 is
            reserved for the boot disk. For example, if you have many
            disks attached to an instance, each disk would have a
            unique index number. If not specified, the server will
            choose an appropriate value.
        - !ruby/object:Api::Type::NestedObject
          name: initializeParams
          description: |
            Specifies the parameters for a new disk that will be
            created alongside the new instance. Use initialization
            parameters to create boot disks or local SSDs attached to
            the new instance.
          properties:
          - !ruby/object:Api::Type::String
            name: diskName
            description: |
              Specifies the disk name. If not specified, the default
              is to use the name of the instance.
          - !ruby/object:Api::Type::Integer
            name: diskSizeGb
            description: Specifies the size of the disk in base-2 GB.
          - !ruby/object:Api::Type::ResourceRef
            name: diskType
            resource: DiskType
            imports: selfLink
            description: |
              Reference to a gcompute_disk_type resource.
              Specifies the disk type to use to create the instance.
              If not specified, the default is pd-standard.
          - !ruby/object:Api::Type::String
            name: sourceImage
            description: |
              The source image to create this disk. When creating a
              new instance, one of initializeParams.sourceImage or
              disks.source is required.  To create a disk with one of
              the public operating system images, specify the image
              by its family name.
          - !ruby/object:Api::Type::NestedObject
            name: sourceImageEncryptionKey
            description: |
              The customer-supplied encryption key of the source
              image. Required if the source image is protected by a
              customer-supplied encryption key.

              Instance templates do not store customer-supplied
              encryption keys, so you cannot create disks for
              instances in a managed instance group if the source
              images are encrypted with your own keys.
            properties:
            - !ruby/object:Api::Type::String
              name: rawKey
              description: |
                Specifies a 256-bit customer-supplied encryption
                key, encoded in RFC 4648 base64 to either encrypt
                or decrypt this resource.
            - !ruby/object:Api::Type::String
              name: sha256
              description: |
                The RFC 4648 base64 encoded SHA-256 hash of the
                customer-supplied encryption key that protects this
                resource.
              output: true
          input: true
        - !ruby/object:Api::Type::Enum
          name: interface
          description: |
            Specifies the disk interface to use for attaching this
            disk, which is either SCSI or NVME. The default is SCSI.
            Persistent disks must always use SCSI and the request will
            fail if you attempt to attach a persistent disk in any
            other format than SCSI.
          values:
          - :SCSI
          - :NVME
        - !ruby/object:Api::Type::Enum
          name: mode
          description: |
            The mode in which to attach this disk, either READ_WRITE or
            READ_ONLY. If not specified, the default is to attach the
            disk in READ_WRITE mode.
          values:
          - :READ_WRITE
          - :READ_ONLY
        - !ruby/object:Api::Type::ResourceRef
          name: source
          resource: Disk
          imports: name
          description: |
            Reference to a gcompute_disk resource. When creating a new instance,
            one of initializeParams.sourceImage or disks.source is required.

            If desired, you can also attach existing non-root
            persistent disks using this property. This field is only
            applicable for persistent disks.

            Note that for InstanceTemplate, specify the disk name, not
            the URL for the disk.
        - !ruby/object:Api::Type::Enum
          name: type
          description: |
            Specifies the type of the disk, either SCRATCH or
            PERSISTENT. If not specified, the default is PERSISTENT.
          values:
          - :SCRATCH
          - :PERSISTENT
    properties.guestAccelerators.item_type.acceleratorCount: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The number of the guest accelerator cards exposed to this
        instance.
    properties.guestAccelerators.item_type.acceleratorType: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Full or partial URL of the accelerator type resource to expose
        to this instance.
    properties.guestAccelerators: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::Integer
          name: acceleratorCount
          description: |
            The number of the guest accelerator cards exposed to this
            instance.
        - !ruby/object:Api::Type::String
          name: acceleratorType
          description: |
            Full or partial URL of the accelerator type resource to expose
            to this instance.
    properties.networkInterfaces.item_type.accessConfigs.item_type.name: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The name of this access configuration. The
        default and recommended name is External NAT but you can
        use any arbitrary string you would like. For example, My
        external IP or Network Access.
      required: true
    properties.networkInterfaces.item_type.accessConfigs.item_type.natIP: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies the title of a gcompute_address.
        An external IP address associated with this instance.
        Specify an unused static external IP address available to
        the project or leave this field undefined to use an IP
        from a shared ephemeral IP address pool. If you specify a
        static external IP address, it must live in the same
        region as the zone of the instance.
      resource: Address
      imports: address
    properties.networkInterfaces.item_type.accessConfigs.item_type.type: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The type of configuration. The default and only option is
        ONE_TO_ONE_NAT.
      required: true
    properties.networkInterfaces.item_type.accessConfigs: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        An array of configurations for this interface. Currently, only
        one access config, ONE_TO_ONE_NAT, is supported. If there are no
        accessConfigs specified, then this instance will have no
        external internet access.
      item_type: &1 !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::String
          name: name
          description: |
            The name of this access configuration. The
            default and recommended name is External NAT but you can
            use any arbitrary string you would like. For example, My
            external IP or Network Access.
          required: true
        - !ruby/object:Api::Type::ResourceRef
          name: natIP
          resource: Address
          imports: address
          description: |
            Specifies the title of a gcompute_address.
            An external IP address associated with this instance.
            Specify an unused static external IP address available to
            the project or leave this field undefined to use an IP
            from a shared ephemeral IP address pool. If you specify a
            static external IP address, it must live in the same
            region as the zone of the instance.
        - !ruby/object:Api::Type::Enum
          name: type
          description: |
            The type of configuration. The default and only option is
            ONE_TO_ONE_NAT.
          values:
          - :ONE_TO_ONE_NAT
          required: true
    properties.networkInterfaces.item_type.aliasIpRanges.item_type.ipCidrRange: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The IP CIDR range represented by this alias IP range.
        This IP CIDR range must belong to the specified
        subnetwork and cannot contain IP addresses reserved by
        system or used by other network interfaces. This range
        may be a single IP address (e.g. 10.2.3.4), a netmask
        (e.g. /24) or a CIDR format string (e.g. 10.1.2.0/24).
    properties.networkInterfaces.item_type.aliasIpRanges.item_type.subnetworkRangeName: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Optional subnetwork secondary range name specifying
        the secondary range from which to allocate the IP
        CIDR range for this alias IP range. If left
        unspecified, the primary range of the subnetwork will
        be used.
    properties.networkInterfaces.item_type.aliasIpRanges: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        An array of alias IP ranges for this network interface. Can
        only be specified for network interfaces on subnet-mode
        networks.
      item_type: &2 !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::String
          name: ipCidrRange
          description: |
            The IP CIDR range represented by this alias IP range.
            This IP CIDR range must belong to the specified
            subnetwork and cannot contain IP addresses reserved by
            system or used by other network interfaces. This range
            may be a single IP address (e.g. 10.2.3.4), a netmask
            (e.g. /24) or a CIDR format string (e.g. 10.1.2.0/24).
        - !ruby/object:Api::Type::String
          name: subnetworkRangeName
          description: |
            Optional subnetwork secondary range name specifying
            the secondary range from which to allocate the IP
            CIDR range for this alias IP range. If left
            unspecified, the primary range of the subnetwork will
            be used.
    properties.networkInterfaces.item_type.name: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The name of the network interface, generated by the
        server. For network devices, these are eth0, eth1, etc
    properties.networkInterfaces.item_type.network: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies the title of an existing gcompute_network.  When creating
        an instance, if neither the network nor the subnetwork is specified,
        the default network global/networks/default is used; if the network
        is not specified but the subnetwork is specified, the network is
        inferred.
      resource: Network
      imports: selfLink
    properties.networkInterfaces.item_type.networkIP: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        An IPv4 internal network address to assign to the
        instance for this network interface. If not specified
        by the user, an unused internal IP is assigned by the
        system.
    properties.networkInterfaces.item_type.subnetwork: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Reference to a gcompute_subnetwork resource.
        If the network resource is in legacy mode, do not
        provide this property.  If the network is in auto
        subnet mode, providing the subnetwork is optional. If
        the network is in custom subnet mode, then this field
        should be specified.
      resource: Subnetwork
      imports: selfLink
    properties.networkInterfaces: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::Array
          name: accessConfigs
          description: |
            An array of configurations for this interface. Currently, only
            one access config, ONE_TO_ONE_NAT, is supported. If there are no
            accessConfigs specified, then this instance will have no
            external internet access.
          item_type: *1
        - !ruby/object:Api::Type::Array
          name: aliasIpRanges
          description: |
            An array of alias IP ranges for this network interface. Can
            only be specified for network interfaces on subnet-mode
            networks.
          item_type: *2
        - !ruby/object:Api::Type::String
          name: name
          description: |
            The name of the network interface, generated by the
            server. For network devices, these are eth0, eth1, etc
          output: true
        - !ruby/object:Api::Type::ResourceRef
          name: network
          resource: Network
          imports: selfLink
          description: |
            Specifies the title of an existing gcompute_network.  When creating
            an instance, if neither the network nor the subnetwork is specified,
            the default network global/networks/default is used; if the network
            is not specified but the subnetwork is specified, the network is
            inferred.
        - !ruby/object:Api::Type::String
          name: networkIP
          description: |
            An IPv4 internal network address to assign to the
            instance for this network interface. If not specified
            by the user, an unused internal IP is assigned by the
            system.
        - !ruby/object:Api::Type::ResourceRef
          name: subnetwork
          resource: Subnetwork
          imports: selfLink
          description: |
            Reference to a gcompute_subnetwork resource.
            If the network resource is in legacy mode, do not
            provide this property.  If the network is in auto
            subnet mode, providing the subnetwork is optional. If
            the network is in custom subnet mode, then this field
            should be specified.
    properties.serviceAccounts.item_type.scopes: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The list of scopes to be made available for this service
        account.
    properties.serviceAccounts: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::String
          name: email
          description: Email address of the service account.
        - !ruby/object:Api::Type::Array
          name: scopes
          description: |
            The list of scopes to be made available for this service
            account.
          item_type: Api::Type::String
  transport: !ruby/object:Api::Resource::Transport
    encoder: encode_request
    decoder: decode_response
License: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: |
    A License resource represents a software license. Licenses are used to
    track software usage in images, persistent disks, snapshots, and virtual
    machine instances.
  properties: {}
  readonly: true
  base_url: "/projects/{{project}}/global/licenses"
Image: !ruby/object:DiscoveryOverride::ResourceOverride
  description: |
    Represents an Image resource.

    Google Compute Engine uses operating system images to create the root
    persistent disks for your instances. You specify an image when you create
    an instance. Images contain a boot loader, an operating system, and a
    root file system. Linux operating system images are also capable of
    running containers on Compute Engine.

    Images can be either public or custom.

    Public images are provided and maintained by Google, open-source
    communities, and third-party vendors. By default, all projects have
    access to these images and can use them to create instances.  Custom
    images are available only to your project. You can create a custom image
    from root persistent disks and other images. Then, use the custom image
    to create an instance.
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/global/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    guestOsFeatures.item_type.type: !ruby/object:DiscoveryOverride::PropertyOverride
      values: &3
      - :VIRTIO_SCSI_MULTIQUEUE
      description: |
        The type of supported feature. Currenty only
        VIRTIO_SCSI_MULTIQUEUE is supported. For newer Windows images,
        the server might also populate this property with the value
        WINDOWS to indicate that this is a Windows image. This value is
        purely informational and does not enable or disable any
        features.
    guestOsFeatures: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::Enum
          name: type
          description: |
            The type of supported feature. Currenty only
            VIRTIO_SCSI_MULTIQUEUE is supported. For newer Windows images,
            the server might also populate this property with the value
            WINDOWS to indicate that this is a Windows image. This value is
            purely informational and does not enable or disable any
            features.
          values: *3
Instance: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  input: true
  description: 'An instance is a virtual machine (VM) hosted on Google''s infrastructure.

'
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/zones/{{zone}}/operations/{{op_id}}
      wait_ms: 1000
      timeouts: !ruby/object:Api::Async::Operation::Timeouts
        insert_sec: 360
        update_sec: 360
        delete_sec: 360
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    disks.item_type.autoDelete: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies whether the disk will be auto-deleted when the
        instance is deleted (but not when the disk is detached from
        the instance).

        Tip: Disks should be set to autoDelete=true
        so that leftover disks are not left behind on machine
        deletion.
    disks.item_type.boot: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Indicates that this is a boot disk. The virtual machine will
        use the first partition of the disk for its root filesystem.
    disks.item_type.deviceName: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies a unique device name of your choice that is
        reflected into the /dev/disk/by-id/google-* tree of a Linux
        operating system running within the instance. This name can
        be used to reference the device for mounting, resizing, and
        so on, from within the instance.
    disks.item_type.diskEncryptionKey.rawKey: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies a 256-bit customer-supplied encryption key,
        encoded in RFC 4648 base64 to either encrypt or decrypt
        this resource.
    disks.item_type.diskEncryptionKey.rsaEncryptedKey: !ruby/object:DiscoveryOverride::PropertyOverride
      name: rsaEncryptedKey
      description: |
        Specifies an RFC 4648 base64 encoded, RSA-wrapped
        2048-bit customer-supplied encryption key to either
        encrypt or decrypt this resource.
    disks.item_type.diskEncryptionKey.sha256: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The RFC 4648 base64 encoded SHA-256 hash of the
        customer-supplied encryption key that protects this
        resource.
    disks.item_type.diskEncryptionKey: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Encrypts or decrypts a disk using a customer-supplied
        encryption key.
    disks.item_type.index: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Assigns a zero-based index to this disk, where 0 is
        reserved for the boot disk. For example, if you have many
        disks attached to an instance, each disk would have a
        unique index number. If not specified, the server will
        choose an appropriate value.
    disks.item_type.initializeParams.diskName: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies the disk name. If not specified, the default
        is to use the name of the instance.
    disks.item_type.initializeParams.diskType: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Reference to a gcompute_disk_type resource.
        Specifies the disk type to use to create the instance.
        If not specified, the default is pd-standard.
      resource: DiskType
      imports: selfLink
    disks.item_type.initializeParams.sourceImage: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The source image to create this disk. When creating a
        new instance, one of initializeParams.sourceImage or
        disks.source is required.  To create a disk with one of
        the public operating system images, specify the image
        by its family name.
    disks.item_type.initializeParams.sourceImageEncryptionKey.rawKey: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies a 256-bit customer-supplied encryption
        key, encoded in RFC 4648 base64 to either encrypt
        or decrypt this resource.
    disks.item_type.initializeParams.sourceImageEncryptionKey.sha256: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The RFC 4648 base64 encoded SHA-256 hash of the
        customer-supplied encryption key that protects this
        resource.
    disks.item_type.initializeParams.sourceImageEncryptionKey: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The customer-supplied encryption key of the source
        image. Required if the source image is protected by a
        customer-supplied encryption key.

        Instance templates do not store customer-supplied
        encryption keys, so you cannot create disks for
        instances in a managed instance group if the source
        images are encrypted with your own keys.
    disks.item_type.initializeParams: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies the parameters for a new disk that will be
        created alongside the new instance. Use initialization
        parameters to create boot disks or local SSDs attached to
        the new instance.
      input: true
    disks.item_type.interface: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies the disk interface to use for attaching this
        disk, which is either SCSI or NVME. The default is SCSI.
        Persistent disks must always use SCSI and the request will
        fail if you attempt to attach a persistent disk in any
        other format than SCSI.
    disks.item_type.mode: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The mode in which to attach this disk, either READ_WRITE or
        READ_ONLY. If not specified, the default is to attach the
        disk in READ_WRITE mode.
    disks.item_type.source: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Reference to a gcompute_disk resource. When creating a new instance,
        one of initializeParams.sourceImage or disks.source is required.

        If desired, you can also attach existing non-root
        persistent disks using this property. This field is only
        applicable for persistent disks.
      resource: Disk
      imports: selfLink
    disks.item_type.type: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies the type of the disk, either SCRATCH or
        PERSISTENT. If not specified, the default is PERSISTENT.
    disks: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::Boolean
          name: autoDelete
          description: |
            Specifies whether the disk will be auto-deleted when the
            instance is deleted (but not when the disk is detached from
            the instance).

            Tip: Disks should be set to autoDelete=true
            so that leftover disks are not left behind on machine
            deletion.
        - !ruby/object:Api::Type::Boolean
          name: boot
          description: |
            Indicates that this is a boot disk. The virtual machine will
            use the first partition of the disk for its root filesystem.
        - !ruby/object:Api::Type::String
          name: deviceName
          description: |
            Specifies a unique device name of your choice that is
            reflected into the /dev/disk/by-id/google-* tree of a Linux
            operating system running within the instance. This name can
            be used to reference the device for mounting, resizing, and
            so on, from within the instance.
        - !ruby/object:Api::Type::NestedObject
          name: diskEncryptionKey
          description: |
            Encrypts or decrypts a disk using a customer-supplied
            encryption key.
          properties:
          - !ruby/object:Api::Type::String
            name: rawKey
            description: |
              Specifies a 256-bit customer-supplied encryption key,
              encoded in RFC 4648 base64 to either encrypt or decrypt
              this resource.
          - !ruby/object:Api::Type::String
            name: rsaEncryptedKey
            description: |
              Specifies an RFC 4648 base64 encoded, RSA-wrapped
              2048-bit customer-supplied encryption key to either
              encrypt or decrypt this resource.
          - !ruby/object:Api::Type::String
            name: sha256
            description: |
              The RFC 4648 base64 encoded SHA-256 hash of the
              customer-supplied encryption key that protects this
              resource.
            output: true
        - !ruby/object:Api::Type::Integer
          name: index
          description: |
            Assigns a zero-based index to this disk, where 0 is
            reserved for the boot disk. For example, if you have many
            disks attached to an instance, each disk would have a
            unique index number. If not specified, the server will
            choose an appropriate value.
        - !ruby/object:Api::Type::NestedObject
          name: initializeParams
          description: |
            Specifies the parameters for a new disk that will be
            created alongside the new instance. Use initialization
            parameters to create boot disks or local SSDs attached to
            the new instance.
          properties:
          - !ruby/object:Api::Type::String
            name: diskName
            description: |
              Specifies the disk name. If not specified, the default
              is to use the name of the instance.
          - !ruby/object:Api::Type::Integer
            name: diskSizeGb
            description: Specifies the size of the disk in base-2 GB.
          - !ruby/object:Api::Type::ResourceRef
            name: diskType
            resource: DiskType
            imports: selfLink
            description: |
              Reference to a gcompute_disk_type resource.
              Specifies the disk type to use to create the instance.
              If not specified, the default is pd-standard.
          - !ruby/object:Api::Type::String
            name: sourceImage
            description: |
              The source image to create this disk. When creating a
              new instance, one of initializeParams.sourceImage or
              disks.source is required.  To create a disk with one of
              the public operating system images, specify the image
              by its family name.
          - !ruby/object:Api::Type::NestedObject
            name: sourceImageEncryptionKey
            description: |
              The customer-supplied encryption key of the source
              image. Required if the source image is protected by a
              customer-supplied encryption key.

              Instance templates do not store customer-supplied
              encryption keys, so you cannot create disks for
              instances in a managed instance group if the source
              images are encrypted with your own keys.
            properties:
            - !ruby/object:Api::Type::String
              name: rawKey
              description: |
                Specifies a 256-bit customer-supplied encryption
                key, encoded in RFC 4648 base64 to either encrypt
                or decrypt this resource.
            - !ruby/object:Api::Type::String
              name: sha256
              description: |
                The RFC 4648 base64 encoded SHA-256 hash of the
                customer-supplied encryption key that protects this
                resource.
              output: true
          input: true
        - !ruby/object:Api::Type::Enum
          name: interface
          description: |
            Specifies the disk interface to use for attaching this
            disk, which is either SCSI or NVME. The default is SCSI.
            Persistent disks must always use SCSI and the request will
            fail if you attempt to attach a persistent disk in any
            other format than SCSI.
          values:
          - :SCSI
          - :NVME
        - !ruby/object:Api::Type::Enum
          name: mode
          description: |
            The mode in which to attach this disk, either READ_WRITE or
            READ_ONLY. If not specified, the default is to attach the
            disk in READ_WRITE mode.
          values:
          - :READ_WRITE
          - :READ_ONLY
        - !ruby/object:Api::Type::ResourceRef
          name: source
          resource: Disk
          imports: selfLink
          description: |
            Reference to a gcompute_disk resource. When creating a new instance,
            one of initializeParams.sourceImage or disks.source is required.

            If desired, you can also attach existing non-root
            persistent disks using this property. This field is only
            applicable for persistent disks.
        - !ruby/object:Api::Type::Enum
          name: type
          description: |
            Specifies the type of the disk, either SCRATCH or
            PERSISTENT. If not specified, the default is PERSISTENT.
          values:
          - :SCRATCH
          - :PERSISTENT
    guestAccelerators.item_type.acceleratorCount: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The number of the guest accelerator cards exposed to this
        instance.
    guestAccelerators.item_type.acceleratorType: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Full or partial URL of the accelerator type resource to expose
        to this instance.
    guestAccelerators: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::Integer
          name: acceleratorCount
          description: |
            The number of the guest accelerator cards exposed to this
            instance.
        - !ruby/object:Api::Type::String
          name: acceleratorType
          description: |
            Full or partial URL of the accelerator type resource to expose
            to this instance.
    networkInterfaces.item_type.accessConfigs.item_type.name: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The name of this access configuration. The
        default and recommended name is External NAT but you can
        use any arbitrary string you would like. For example, My
        external IP or Network Access.
      required: true
    networkInterfaces.item_type.accessConfigs.item_type.natIP: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies the title of a gcompute_address.
        An external IP address associated with this instance.
        Specify an unused static external IP address available to
        the project or leave this field undefined to use an IP
        from a shared ephemeral IP address pool. If you specify a
        static external IP address, it must live in the same
        region as the zone of the instance.
      resource: Address
      imports: address
    networkInterfaces.item_type.accessConfigs.item_type.type: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The type of configuration. The default and only option is
        ONE_TO_ONE_NAT.
      required: true
    networkInterfaces.item_type.accessConfigs: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        An array of configurations for this interface. Currently, only
        one access config, ONE_TO_ONE_NAT, is supported. If there are no
        accessConfigs specified, then this instance will have no
        external internet access.
      item_type: &4 !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::String
          name: name
          description: |
            The name of this access configuration. The
            default and recommended name is External NAT but you can
            use any arbitrary string you would like. For example, My
            external IP or Network Access.
          required: true
        - !ruby/object:Api::Type::ResourceRef
          name: natIP
          resource: Address
          imports: address
          description: |
            Specifies the title of a gcompute_address.
            An external IP address associated with this instance.
            Specify an unused static external IP address available to
            the project or leave this field undefined to use an IP
            from a shared ephemeral IP address pool. If you specify a
            static external IP address, it must live in the same
            region as the zone of the instance.
        - !ruby/object:Api::Type::Enum
          name: type
          description: |
            The type of configuration. The default and only option is
            ONE_TO_ONE_NAT.
          values:
          - :ONE_TO_ONE_NAT
          required: true
    networkInterfaces.item_type.aliasIpRanges.item_type.ipCidrRange: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The IP CIDR range represented by this alias IP range.
        This IP CIDR range must belong to the specified
        subnetwork and cannot contain IP addresses reserved by
        system or used by other network interfaces. This range
        may be a single IP address (e.g. 10.2.3.4), a netmask
        (e.g. /24) or a CIDR format string (e.g. 10.1.2.0/24).
    networkInterfaces.item_type.aliasIpRanges.item_type.subnetworkRangeName: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Optional subnetwork secondary range name specifying
        the secondary range from which to allocate the IP
        CIDR range for this alias IP range. If left
        unspecified, the primary range of the subnetwork will
        be used.
    networkInterfaces.item_type.aliasIpRanges: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        An array of alias IP ranges for this network interface. Can
        only be specified for network interfaces on subnet-mode
        networks.
      item_type: &5 !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::String
          name: ipCidrRange
          description: |
            The IP CIDR range represented by this alias IP range.
            This IP CIDR range must belong to the specified
            subnetwork and cannot contain IP addresses reserved by
            system or used by other network interfaces. This range
            may be a single IP address (e.g. 10.2.3.4), a netmask
            (e.g. /24) or a CIDR format string (e.g. 10.1.2.0/24).
        - !ruby/object:Api::Type::String
          name: subnetworkRangeName
          description: |
            Optional subnetwork secondary range name specifying
            the secondary range from which to allocate the IP
            CIDR range for this alias IP range. If left
            unspecified, the primary range of the subnetwork will
            be used.
    networkInterfaces.item_type.name: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The name of the network interface, generated by the
        server. For network devices, these are eth0, eth1, etc
    networkInterfaces.item_type.network: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Specifies the title of an existing gcompute_network.  When creating
        an instance, if neither the network nor the subnetwork is specified,
        the default network global/networks/default is used; if the network
        is not specified but the subnetwork is specified, the network is
        inferred.
      resource: Network
      imports: selfLink
    networkInterfaces.item_type.networkIP: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        An IPv4 internal network address to assign to the
        instance for this network interface. If not specified
        by the user, an unused internal IP is assigned by the
        system.
    networkInterfaces.item_type.subnetwork: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        Reference to a gcompute_subnetwork resource.
        If the network resource is in legacy mode, do not
        provide this property.  If the network is in auto
        subnet mode, providing the subnetwork is optional. If
        the network is in custom subnet mode, then this field
        should be specified.
      resource: Subnetwork
      imports: selfLink
    networkInterfaces: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::Array
          name: accessConfigs
          description: |
            An array of configurations for this interface. Currently, only
            one access config, ONE_TO_ONE_NAT, is supported. If there are no
            accessConfigs specified, then this instance will have no
            external internet access.
          item_type: *4
        - !ruby/object:Api::Type::Array
          name: aliasIpRanges
          description: |
            An array of alias IP ranges for this network interface. Can
            only be specified for network interfaces on subnet-mode
            networks.
          item_type: *5
        - !ruby/object:Api::Type::String
          name: name
          description: |
            The name of the network interface, generated by the
            server. For network devices, these are eth0, eth1, etc
          output: true
        - !ruby/object:Api::Type::ResourceRef
          name: network
          resource: Network
          imports: selfLink
          description: |
            Specifies the title of an existing gcompute_network.  When creating
            an instance, if neither the network nor the subnetwork is specified,
            the default network global/networks/default is used; if the network
            is not specified but the subnetwork is specified, the network is
            inferred.
        - !ruby/object:Api::Type::String
          name: networkIP
          description: |
            An IPv4 internal network address to assign to the
            instance for this network interface. If not specified
            by the user, an unused internal IP is assigned by the
            system.
        - !ruby/object:Api::Type::ResourceRef
          name: subnetwork
          resource: Subnetwork
          imports: selfLink
          description: |
            Reference to a gcompute_subnetwork resource.
            If the network resource is in legacy mode, do not
            provide this property.  If the network is in auto
            subnet mode, providing the subnetwork is optional. If
            the network is in custom subnet mode, then this field
            should be specified.
    serviceAccounts.item_type.scopes: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The list of scopes to be made available for this service
        account.
    serviceAccounts: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::String
          name: email
          description: Email address of the service account.
        - !ruby/object:Api::Type::Array
          name: scopes
          description: |
            The list of scopes to be made available for this service
            account.
          item_type: Api::Type::String
  transport: !ruby/object:Api::Resource::Transport
    encoder: encode_request
    decoder: decode_response
InstanceGroup: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  input: true
  description: |
    Represents an Instance Group resource. Instance groups are self-managed
    and can contain identical or different instances. Instance groups do not
    use an instance template. Unlike managed instance groups, you must create
    and add instances to an instance group manually.
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/zones/{{zone}}/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    namedPorts.item_type.name: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The name for this named port.
        The name must be 1-63 characters long, and comply with RFC1035.
    namedPorts.item_type.port: !ruby/object:DiscoveryOverride::PropertyOverride
      description: 'The port number, which can be a value between 1 and 65535.

'
    namedPorts: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::String
          name: name
          description: |
            The name for this named port.
            The name must be 1-63 characters long, and comply with RFC1035.
        - !ruby/object:Api::Type::Integer
          name: port
          description: 'The port number, which can be a value between 1 and 65535.

'
InstanceGroupManager: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: |
    Creates a managed instance group using the information that you specify in
    the request. After the group is created, it schedules an action to create
    instances in the group using the specified instance template. This
    operation is marked as DONE when the group is created even if the
    instances in the group have not yet been created. You must separately
    verify the status of the individual instances.

    A managed instance group can have up to 1000 VM instances per group.
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/zones/{{zone}}/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    namedPorts.item_type.name: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The name for this named port. The name must be 1-63 characters
        long, and comply with RFC1035.
    namedPorts: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::String
          name: name
          description: |
            The name for this named port. The name must be 1-63 characters
            long, and comply with RFC1035.
        - !ruby/object:Api::Type::Integer
          name: port
          description: The port number, which can be a value between 1 and 65535.
    targetPools: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::ResourceRef
        name: targetPool
        resource: TargetPool
        imports: selfLink
        description: The targetPool to receive managed instances.
InterconnectAttachment: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  input: true
  description: |
    Represents an InterconnectAttachment (VLAN attachment) resource. For more
    information, see Creating VLAN Attachments.
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/regions/{{region}}/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties: {}
MachineType: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - name
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: |
    Represents a MachineType resource. Machine types determine the virtualized
    hardware specifications of your virtual machine instances, such as the
    amount of memory or number of virtual CPUs.
  properties: {}
  readonly: true
Network: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: |
    Represents a Network resource.

    Your Cloud Platform Console project can contain multiple networks, and
    each network can have multiple instances attached to it. A network allows
    you to define a gateway IP and the network range for the instances
    attached to that network. Every project is provided with a default network
    with preset configurations and firewall rules. You can choose to customize
    the default network by adding or removing rules, or you can create new
    networks in that project. Generally, most users only need one network,
    although you can have up to five networks per project by default.

    A network belongs to only one project, and each instance can only belong
    to one network. All Compute Engine networks use the IPv4 protocol. Compute
    Engine currently does not support IPv6. However, Google is a major
    advocate of IPv6 and it is an important future direction.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Official Documentation: https://cloud.google.com/vpc/docs/vpc
    api: https://cloud.google.com/compute/docs/reference/rest/v1/networks
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/global/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    gateway_ipv4: !ruby/object:DiscoveryOverride::PropertyOverride
      name: gateway_ipv4
      description: |
        A gateway address for default routing to other networks. This value is
        read only and is selected by the Google Compute Engine, typically as
        the first usable address in the IPv4Range.
      api_name: gatewayIPv4
      output: true
    ipv4_range: !ruby/object:DiscoveryOverride::PropertyOverride
      name: ipv4_range
      description: |
        The range of internal addresses that are legal on this network. This
        range is a CIDR specification, for example: 192.168.0.0/16. Provided
        by the client when the network is created.
      api_name: IPv4Range
      input: true
  update_verb: :PATCH
Region: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - name
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: |
    Represents a Region resource. A region is a specific geographical
    location where you can run your resources. Each region has one or more
    zones
  properties: {}
  readonly: true
Route: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  input: true
  description: |
    Represents a Route resource.

    A route is a rule that specifies how certain packets should be handled by
    the virtual network. Routes are associated with virtual machines by tag,
    and the set of routes for a particular virtual machine is called its
    routing table. For each packet leaving a virtual machine, the system
    searches that virtual machine's routing table for a single best matching
    route.

    Routes match packets by destination IP address, preferring smaller or more
    specific ranges over larger ones. If there is a tie, the system selects
    the route with the smallest priority value. If there is still a tie, it
    uses the layer three and four packet headers to select just one of the
    remaining matching routes. The packet is then forwarded as specified by
    the next_hop field of the winning route -- either to another virtual
    machine destination, a virtual machine gateway or a Compute
    Engine-operated gateway. Packets that do not match any route in the
    sending virtual machine's routing table will be dropped.

    A Route resource must have exactly one specification of either
    nextHopGateway, nextHopInstance, nextHopIp, or nextHopVpnTunnel.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Using Routes: https://cloud.google.com/vpc/docs/using-routes
    api: https://cloud.google.com/compute/docs/reference/rest/v1/routes
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/global/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties: {}
Router: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: 'Represents a Router resource.

'
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Google Cloud Router: https://cloud.google.com/router/docs/
    api: https://cloud.google.com/compute/docs/reference/rest/v1/routers
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/regions/{{region}}/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    bgp.advertisedIpRanges.item_type.range: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The IP range to advertise. The value must be a
        CIDR-formatted string.
      send_empty_value: true
    bgp.advertisedIpRanges.item_type.description: !ruby/object:DiscoveryOverride::PropertyOverride
      description: 'User-specified description for the IP range.

'
      send_empty_value: true
    bgp.advertisedIpRanges: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::String
          name: range
          description: |
            The IP range to advertise. The value must be a
            CIDR-formatted string.
          send_empty_value: true
        - !ruby/object:Api::Type::String
          name: description
          description: 'User-specified description for the IP range.

'
          send_empty_value: true
  update_verb: :PATCH
Snapshot: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: |
    Represents a Persistent Disk Snapshot resource.

    Use snapshots to back up data from your persistent disks. Snapshots are
    different from public images and custom images, which are used primarily
    to create instances or configure instance templates. Snapshots are useful
    for periodic backup of the data on your persistent disks. You can create
    snapshots from persistent disks even while they are attached to running
    instances.

    Snapshots are incremental, so you can create regular snapshots on a
    persistent disk faster and at a much lower cost than if you regularly
    created a full image of the disk.
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/global/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    licenses: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::ResourceRef
        name: license
        resource: License
        imports: selfLink
        description: A reference to a license associated with this snapshot
    labels: !ruby/object:DiscoveryOverride::PropertyOverride
      description: Labels to apply to this snapshot.
      item_type: Api::Type::String
SslCertificate: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  input: true
  description: |
    An SslCertificate resource, used for HTTPS load balancing. This resource
    provides a mechanism to upload an SSL key and certificate to
    the load balancer to serve secure connections from the user.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Official Documentation: https://cloud.google.com/load-balancing/docs/ssl-certificates
    api: https://cloud.google.com/compute/docs/reference/rest/v1/sslCertificates
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/global/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties: {}
SslPolicy: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: |
    Represents a SSL policy. SSL policies give you the ability to control the
    features of SSL that your SSL proxy or HTTPS load balancer negotiates.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Using SSL Policies: https://cloud.google.com/compute/docs/load-balancing/ssl-policies
    api: https://cloud.google.com/compute/docs/reference/rest/v1/sslPolicies
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/global/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    warnings.item_type.code: !ruby/object:DiscoveryOverride::PropertyOverride
      description: A warning code, if applicable.
    warnings.item_type.message: !ruby/object:DiscoveryOverride::PropertyOverride
      description: A human-readable description of the warning code.
    warnings: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::String
          name: code
          description: A warning code, if applicable.
          output: true
        - !ruby/object:Api::Type::String
          name: message
          description: A human-readable description of the warning code.
          output: true
  update_verb: :PATCH
Subnetwork: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  input: true
  description: |
    A VPC network is a virtual version of the traditional physical networks
    that exist within and between physical data centers. A VPC network
    provides connectivity for your Compute Engine virtual machine (VM)
    instances, Container Engine containers, App Engine Flex services, and
    other network-related resources.

    Each GCP project contains one or more VPC networks. Each VPC network is a
    global entity spanning all GCP regions. This global VPC network allows VM
    instances and other resources to communicate with each other via internal,
    private IP addresses.

    Each VPC network is subdivided into subnets, and each subnet is contained
    within a single region. You can have more than one subnet in a region for
    a given VPC network. Each subnet has a contiguous private RFC1918 IP
    space. You create instances, containers, and the like in these subnets.
    When you create an instance, you must create it in a subnet, and the
    instance draws its internal IP address from that subnet.

    Virtual machine (VM) instances in a VPC network can communicate with
    instances in all other subnets of the same VPC network, regardless of
    region, using their RFC1918 private IP addresses. You can isolate portions
    of the network, even entire subnets, using firewall rules.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Private Google Access: https://cloud.google.com/vpc/docs/configure-private-google-access
      Cloud Networking: https://cloud.google.com/vpc/docs/using-vpc
    api: https://cloud.google.com/compute/docs/reference/rest/beta/subnetworks
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/regions/{{region}}/operations/{{op_id}}
      wait_ms: 1000
      timeouts: !ruby/object:Api::Async::Operation::Timeouts
        insert_sec: 360
        update_sec: 360
        delete_sec: 360
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    secondaryIpRanges.item_type.rangeName: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The name associated with this subnetwork secondary range, used
        when adding an alias IP range to a VM instance. The name must
        be 1-63 characters long, and comply with RFC1035. The name
        must be unique within the subnetwork.
      required: true
    secondaryIpRanges.item_type.ipCidrRange: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The range of IP addresses belonging to this subnetwork secondary
        range. Provide this property when you create the subnetwork.
        Ranges must be unique and non-overlapping with all primary and
        secondary IP ranges within a network. Only IPv4 is supported.
      required: true
    secondaryIpRanges: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::String
          name: rangeName
          description: |
            The name associated with this subnetwork secondary range, used
            when adding an alias IP range to a VM instance. The name must
            be 1-63 characters long, and comply with RFC1035. The name
            must be unique within the subnetwork.
          required: true
        - !ruby/object:Api::Type::String
          name: ipCidrRange
          description: |
            The range of IP addresses belonging to this subnetwork secondary
            range. Provide this property when you create the subnetwork.
            Ranges must be unique and non-overlapping with all primary and
            secondary IP ranges within a network. Only IPv4 is supported.
          required: true
TargetHttpProxy: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  input: true
  description: |
    Represents a TargetHttpProxy resource, which is used by one or more global
    forwarding rule to route incoming HTTP requests to a URL map.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Official Documentation: https://cloud.google.com/compute/docs/load-balancing/http/target-proxies
    api: https://cloud.google.com/compute/docs/reference/latest/targetHttpProxies
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/global/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties: {}
TargetHttpsProxy: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  input: true
  description: |
    Represents a TargetHttpsProxy resource, which is used by one or more
    global forwarding rule to route incoming HTTPS requests to a URL map.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Official Documentation: https://cloud.google.com/compute/docs/load-balancing/http/target-proxies
    api: https://cloud.google.com/compute/docs/reference/latest/targetHttpsProxies
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/global/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    sslCertificates: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::ResourceRef
        name: sslCertificate
        resource: SslCertificate
        imports: selfLink
        description: The SSL certificates used by this TargetHttpsProxy
TargetPool: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: Represents a TargetPool resource, used for Load Balancing.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Official Documentation: https://cloud.google.com/compute/docs/load-balancing/network/target-pools
    api: https://cloud.google.com/compute/docs/reference/rest/v1/targetPools
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/regions/{{region}}/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    healthCheck: !ruby/object:DiscoveryOverride::PropertyOverride
      name: healthCheck
      description: |
        A reference to a HttpHealthCheck resource.

        A member instance in this pool is considered healthy if and only if
        the health checks pass. If not specified it means all member instances
        will be considered healthy at all times.
      resource: HttpHealthCheck
      imports: selfLink
    instances: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::ResourceRef
        name: instance
        resource: Instance
        imports: selfLink
        description: The instance being served by this pool.
    sessionAffinity: !ruby/object:DiscoveryOverride::PropertyOverride
      values:
      - :NONE
      - :CLIENT_IP
      - :CLIENT_IP_PROTO
  transport: !ruby/object:Api::Resource::Transport
    encoder: encode_request
    decoder: decode_request
TargetSslProxy: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  input: true
  description: |
    Represents a TargetSslProxy resource, which is used by one or more
    global forwarding rule to route incoming SSL requests to a backend
    service.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Setting Up SSL proxy for Google Cloud Load Balancing: https://cloud.google.com/compute/docs/load-balancing/tcp-ssl/
    api: https://cloud.google.com/compute/docs/reference/latest/targetSslProxies
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/global/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    sslCertificates: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::ResourceRef
        name: sslCertificate
        resource: SslCertificate
        imports: selfLink
        description: The SSL certificates used by this TargetSslProxy
      max_size: 1
TargetTcpProxy: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  input: true
  description: |
    Represents a TargetTcpProxy resource, which is used by one or more
    global forwarding rule to route incoming TCP requests to a Backend
    service.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Setting Up TCP proxy for Google Cloud Load Balancing: https://cloud.google.com/compute/docs/load-balancing/tcp-ssl/tcp-proxy
    api: https://cloud.google.com/compute/docs/reference/latest/targetTcpProxies
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/global/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties: {}
TargetVpnGateway: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  input: true
  description: |
    Represents a VPN gateway running in GCP. This virtual device is managed
    by Google, but used only by you.
  references: !ruby/object:Api::Resource::ReferenceLinks
    api: https://cloud.google.com/compute/docs/reference/rest/v1/targetVpnGateways
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/regions/{{region}}/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    forwardingRules: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::ResourceRef
        name: forwardingRule
        resource: ForwardingRule
        imports: selfLink
        description: 'A ForwardingRule resource associated to this VPN gateway.

'
UrlMap: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: |
    UrlMaps are used to route requests to a backend service based on rules
    that you define for the host and path of an incoming URL.
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/global/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    hostRules.item_type.description: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        An optional description of this HostRule. Provide this property
        when you create the resource.
    hostRules.item_type.hosts: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The list of host patterns to match. They must be valid
        hostnames, except * will match any string of ([a-z0-9-.]*). In
        that case, * must be the first character and must be followed in
        the pattern by either - or ..
      required: true
    hostRules.item_type.pathMatcher: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The name of the PathMatcher to use to match the path portion of
        the URL if the hostRule matches the URL's host portion.
      required: true
    hostRules: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::String
          name: description
          description: |
            An optional description of this HostRule. Provide this property
            when you create the resource.
        - !ruby/object:Api::Type::Array
          name: hosts
          description: |
            The list of host patterns to match. They must be valid
            hostnames, except * will match any string of ([a-z0-9-.]*). In
            that case, * must be the first character and must be followed in
            the pattern by either - or ..
          item_type: Api::Type::String
          required: true
        - !ruby/object:Api::Type::String
          name: pathMatcher
          description: |
            The name of the PathMatcher to use to match the path portion of
            the URL if the hostRule matches the URL's host portion.
          required: true
    pathMatchers.item_type.defaultService: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        A reference to a BackendService resource. This will be used if
        none of the pathRules defined by this PathMatcher is matched by
        the URL's path portion.
      required: true
      resource: BackendService
      imports: selfLink
    pathMatchers.item_type.description: !ruby/object:DiscoveryOverride::PropertyOverride
      description: An optional description of this resource.
    pathMatchers.item_type.name: !ruby/object:DiscoveryOverride::PropertyOverride
      description: 'The name to which this PathMatcher is referred by the HostRule.

'
      required: true
    pathMatchers.item_type.pathRules.item_type.paths: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        The list of path patterns to match. Each must start with /
        and the only place a * is allowed is at the end following
        a /. The string fed to the path matcher does not include
        any text after the first ? or #, and those chars are not
        allowed here.
      required: true
    pathMatchers.item_type.pathRules.item_type.service: !ruby/object:DiscoveryOverride::PropertyOverride
      description: |
        A reference to the BackendService resource if this rule is
        matched.
      required: true
      resource: BackendService
      imports: selfLink
    pathMatchers.item_type.pathRules: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: &6 !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::Array
          name: paths
          description: |
            The list of path patterns to match. Each must start with /
            and the only place a * is allowed is at the end following
            a /. The string fed to the path matcher does not include
            any text after the first ? or #, and those chars are not
            allowed here.
          item_type: Api::Type::String
          required: true
        - !ruby/object:Api::Type::ResourceRef
          name: service
          resource: BackendService
          imports: selfLink
          description: |
            A reference to the BackendService resource if this rule is
            matched.
          required: true
    pathMatchers: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::ResourceRef
          name: defaultService
          resource: BackendService
          imports: selfLink
          description: |
            A reference to a BackendService resource. This will be used if
            none of the pathRules defined by this PathMatcher is matched by
            the URL's path portion.
          required: true
        - !ruby/object:Api::Type::String
          name: description
          description: An optional description of this resource.
        - !ruby/object:Api::Type::String
          name: name
          description: 'The name to which this PathMatcher is referred by the HostRule.

'
          required: true
        - !ruby/object:Api::Type::Array
          name: pathRules
          description: The list of path rules.
          item_type: *6
    tests.item_type.host: !ruby/object:DiscoveryOverride::PropertyOverride
      required: true
    tests.item_type.path: !ruby/object:DiscoveryOverride::PropertyOverride
      required: true
    tests.item_type.service: !ruby/object:DiscoveryOverride::PropertyOverride
      description: A reference to expected BackendService resource the given URL should
        be mapped to.
      required: true
      resource: BackendService
      imports: selfLink
    tests: !ruby/object:DiscoveryOverride::PropertyOverride
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::String
          name: description
          description: Description of this test case.
        - !ruby/object:Api::Type::String
          name: host
          description: Host portion of the URL.
          required: true
        - !ruby/object:Api::Type::String
          name: path
          description: Path portion of the URL.
          required: true
        - !ruby/object:Api::Type::ResourceRef
          name: service
          resource: BackendService
          imports: selfLink
          description: A reference to expected BackendService resource the given URL
            should be mapped to.
          required: true
VpnTunnel: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  input: true
  description: VPN tunnel resource.
  references: !ruby/object:Api::Resource::ReferenceLinks
    guides:
      Cloud VPN Overview: https://cloud.google.com/vpn/docs/concepts/overview
      Networks and Tunnel Routing: https://cloud.google.com/vpn/docs/concepts/choosing-networks-routing
    api: https://cloud.google.com/compute/docs/reference/rest/v1/vpnTunnels
  async: !ruby/object:Api::Async
    operation: !ruby/object:Api::Async::Operation
      kind: compute#operation
      path: name
      base_url: projects/{{project}}/regions/{{region}}/operations/{{op_id}}
      wait_ms: 1000
    result: !ruby/object:Api::Async::Result
      path: targetLink
    status: !ruby/object:Api::Async::Status
      path: status
      complete: DONE
      allowed:
      - PENDING
      - RUNNING
      - DONE
    error: !ruby/object:Api::Async::Error
      path: error/errors
      message: message
  properties:
    labels: !ruby/object:DiscoveryOverride::PropertyOverride
      name: labels
      description: Labels to apply to this VpnTunnel.
      key_type: Api::Type::String
      value_type: Api::Type::String
      update_verb: :POST
      update_url: projects/{{project}}/regions/{{region}}/vpnTunnels/{{name}}/setLabels
    labelFingerprint: !ruby/object:DiscoveryOverride::PropertyOverride
      name: labelFingerprint
      description: |
        The fingerprint used for optimistic locking of this resource.  Used
        internally during updates.
      update_verb: :POST
      update_url: projects/{{project}}/regions/{{region}}/vpnTunnels/{{name}}/setLabels
Zone: !ruby/object:DiscoveryOverride::ResourceOverride
  exports:
  - name
  - !ruby/object:Api::Type::SelfLink
    name: selfLink
  description: Represents a Zone resource.
  properties: {}
  readonly: true
